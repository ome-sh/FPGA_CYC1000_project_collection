|p1
o_led_2 <= prescaler:inst2.led2
i_clock => pll:inst.inclk0
i_button => prescaler:inst2.button
o_led_1 <= prescaler:inst2.led1
o_led_3 <= prescaler:inst2.led3
o_led_4 <= prescaler:inst2.led4
o_led_5 <= prescaler:inst2.led5
o_led_6 <= prescaler:inst2.led6
o_led_7 <= prescaler:inst2.led7
o_led_8 <= prescaler:inst2.led8
output_clk_25mhz <= prescaler:inst2.clk_output_25mhz


|p1|prescaler:inst2
clk_200mhz => r_clk_output_25mhz.CLK
clk_200mhz => r_clk_output_25mhz_c[0].CLK
clk_200mhz => r_clk_output_25mhz_c[1].CLK
clk_200mhz => r_clk_output_25mhz_c[2].CLK
clk_200mhz => r_clk_output_25mhz_c[3].CLK
clk_200mhz => r_clk_output_25mhz_c[4].CLK
clk_200mhz => r_clk_output_25mhz_c[5].CLK
clk_200mhz => r_clk_output_25mhz_c[6].CLK
clk_200mhz => r_clk_output_25mhz_c[7].CLK
clk_200mhz => r_led[0].CLK
clk_200mhz => r_led[1].CLK
clk_200mhz => r_led[2].CLK
clk_200mhz => r_led[3].CLK
clk_200mhz => r_led[4].CLK
clk_200mhz => r_led[5].CLK
clk_200mhz => r_led[6].CLK
clk_200mhz => r_led[7].CLK
clk_200mhz => r_counter[0].CLK
clk_200mhz => r_counter[1].CLK
clk_200mhz => r_counter[2].CLK
clk_200mhz => r_counter[3].CLK
clk_200mhz => r_counter[4].CLK
clk_200mhz => r_counter[5].CLK
clk_200mhz => r_counter[6].CLK
clk_200mhz => r_counter[7].CLK
clk_200mhz => r_counter[8].CLK
clk_200mhz => r_counter[9].CLK
clk_200mhz => r_counter[10].CLK
clk_200mhz => r_counter[11].CLK
clk_200mhz => r_counter[12].CLK
clk_200mhz => r_counter[13].CLK
clk_200mhz => r_counter[14].CLK
clk_200mhz => r_counter[15].CLK
clk_200mhz => r_counter[16].CLK
clk_200mhz => r_counter[17].CLK
clk_200mhz => r_counter[18].CLK
clk_200mhz => r_counter[19].CLK
clk_200mhz => r_counter[20].CLK
clk_200mhz => r_counter[21].CLK
clk_200mhz => r_counter[22].CLK
clk_200mhz => r_counter[23].CLK
clk_200mhz => r_counter[24].CLK
clk_200mhz => r_counter[25].CLK
clk_200mhz => r_counter[26].CLK
clk_200mhz => r_counter[27].CLK
clk_200mhz => r_counter[28].CLK
clk_200mhz => r_counter[29].CLK
clk_200mhz => r_counter[30].CLK
clk_200mhz => r_counter[31].CLK
button => ~NO_FANOUT~
led1 <= r_led[0].DB_MAX_OUTPUT_PORT_TYPE
led2 <= r_led[1].DB_MAX_OUTPUT_PORT_TYPE
led3 <= r_led[2].DB_MAX_OUTPUT_PORT_TYPE
led4 <= r_led[3].DB_MAX_OUTPUT_PORT_TYPE
led5 <= r_led[4].DB_MAX_OUTPUT_PORT_TYPE
led6 <= r_led[5].DB_MAX_OUTPUT_PORT_TYPE
led7 <= r_led[6].DB_MAX_OUTPUT_PORT_TYPE
led8 <= r_led[7].DB_MAX_OUTPUT_PORT_TYPE
clk_output_25mhz <= r_clk_output_25mhz.DB_MAX_OUTPUT_PORT_TYPE


|p1|pll:inst
inclk0 => sub_wire1[0].IN1
c0 <= altpll:altpll_component.clk


|p1|pll:inst|altpll:altpll_component
inclk[0] => pll_altpll:auto_generated.inclk[0]
inclk[1] => pll_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|p1|pll:inst|altpll:altpll_component|pll_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


